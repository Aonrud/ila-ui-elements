/*! ILA UI Elements
 *Copyright (C) 2021-2022 Aonghus Storey
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports):"function"==typeof define&&define.amd?define(["exports"],i):i((t="undefined"!=typeof globalThis?globalThis:t||self).ila={})}(this,(function(t){"use strict";function i(t,i){let s={};for(const o in t)s[o]=i[o]??t[o];return s}const s={leftButtonClass:"scroller-left btn btn-scroller",rightButtonClass:"scroller-right btn btn-scroller",leftButtonContent:"⮈",rightButtonContent:"⮊",breakpoints:[[0,4],[768,4],[992,6],[1200,8]]};const o={targetClass:"viewer",panzoom:!1,showDownload:!1,showLink:!0,btnCueText:"⨁",btnHideText:"ⓧ",btnDownloadText:"⮋",btnPrevText:"⮈",btnNextText:"⮊",btnLinkText:"⛓",btnZoomText:"🞕",btnZoomTextActive:"🞔",btnCueIcon:"",btnHideIcon:"",btnDownloadIcon:"",btnPrevIcon:"",btnNextIcon:"",btnLinkIcon:"",btnZoomIcon:"",btnZoomIconActive:""};t.ImageViewer=class{strings={titleHide:"Close",titlePrev:"Previous image",titleNext:"Next image",titleZoom:"Enlarge image (drag to move the image around)",titleZoomActive:"Reset image to fit screen",titleZoomDisabled:"Zoom disabled (the image is already full size)",titleDownload:"Download this image",titleLink:"More information"};constructor(t={}){this.t=i(o,t),this.i=document.querySelectorAll("img."+this.t.targetClass)}create(){this.o(),this.h()}next(){const t=this.l===this.i.length-1?0:this.l+1;this.show(t)}prev(){const t=0===this.l?this.i.length-1:this.l-1;this.show(t)}hide(){this.u&&(this.m.style.display="none",document.body.style.overflow="visible",this.m.blur(),this.u=!1)}show(t=0){this.u||(this.m.style.display="block",document.body.style.overflow="hidden",this.m.focus(),this.u=!0),Number.isInteger(t)&&this.p(t)}p(t){const i=this.i[t];this.l=t,this.t.panzoom&&this.g.classList.contains("pan")&&(this.btnToggle(document.getElementById("btnZoom"),!1),this.zoomToggle(!1)),this.g.src=i.dataset.full??i.src,this.g.setAttribute("alt",i.getAttribute("alt"));const s=this.m.querySelector(".caption"),o=this.i[t].parentElement.nextElementSibling;o&&("FIGCAPTION"===o.tagName||o.classList.contains("caption"))?(s.textContent=o.textContent,s.style.display="block"):s.style.display="none"}zoom(t){const i=!this.g.classList.contains("pan");this.zoomToggle(i),this.btnToggle(t.target,i),t.target.classList.toggle("zoomed")}btnToggle(t,i=!0){const s=[...t.childNodes].filter((t=>t.nodeType===Node.TEXT_NODE))[0],o=i?this.t[`${t.id}TextActive`]:this.t[`${t.id}Text`],e=i?this.t[`${t.id}IconActive`]:this.t[`${t.id}Icon`],n=i?this.strings[`${t.id.replace("btn","title")}Active`]:this.strings[t.id.replace("btn","title")];s.textContent=o,e&&(t.querySelector("span").className=e),t.setAttribute("title",n)}zoomToggle(t=!0){const i=this.v;if(t)return this.g.classList.add("pan"),i.bind(),void i.setStyle("cursor","move");this.g.classList.remove("pan"),i.reset({animate:!1}),i.setStyle("cursor","auto"),i.destroy()}h(){const t=document.createElement("div");t.classList.add("image-wrap");const i=document.createElement("img");i.addEventListener("load",(()=>this.I())),t.append(i);const s=document.createElement("div");s.classList.add("caption");const o=document.createElement("div");o.id="overlay",o.style.display="none",o.setAttribute("tabindex",-1),o.append(t),o.append(s),o.append(this.$()),o.addEventListener("keydown",(t=>this.T(t))),this.m=o,this.g=i,this.u=!1,document.body.append(this.m),this.t.panzoom&&(this.v=this.v??Panzoom(this.g,{disableZoom:!0,noBind:!0}),this.zoomToggle(!1))}o(){for(const[t,i]of this.i.entries()){let s=i.parentElement;"A"!==s.tagName&&(s=document.createElement("a"),i.parentElement.insertBefore(s,i),s.append(i)),s.classList.add("viewer-wrap");const o=document.createElement("div");o.classList.add("cue"),o.textContent=this.t.btnCueText,this.t.btnCueIcon&&this.k(this.t.btnCueIcon,o),s.append(o),s.addEventListener("click",(i=>{i.preventDefault(),this.show(t)}))}}$(){const t=document.createElement("nav");t.classList.add("image-viewer-controls"),t.setAttribute("aria-label","Image Viewer Controls");const i=["Hide","Prev","Next"],s=["Download","Link"];for(const s of i)t.append(this._(s));this.t.panzoom&&t.append(this._("Zoom"));for(const i of s)if(this.t[`show${i}`]){let s=document.createElement("a");s.id=`btn${i}`,t.append(s)}for(const i of t.children)i.textContent=this.t[`${i.id}Text`],this.t[`${i.id}Icon`]&&this.k(this.t[`${i.id}Icon`],i),this.strings[`title${i.id.replace("btn","")}`]&&i.setAttribute("title",this.strings[`title${i.id.replace("btn","")}`]);return t}I(){const t=this.g,i=this.l;if(this.t.showDownload){const i=document.getElementById("btnDownload");i.href=t.src,i.setAttribute("download","")}if(this.t.showLink){const t=document.getElementById("btnLink");this.i[i].dataset.link?(t.href=this.i[i].dataset.link,t.style.display="block"):(t.removeAttribute("href"),t.style.display="none")}if(this.t.panzoom){const i=document.getElementById("btnZoom");t.width<t.naturalWidth?(i.disabled=!1,i.setAttribute("title",this.strings.titleZoom)):(i.disabled=!0,i.setAttribute("title",this.strings.titleZoomDisabled))}}_(t){let i=document.createElement("button");return i.id=`btn${t}`,i.setAttribute("type","button"),"function"==typeof this[t.toLowerCase()]&&i.addEventListener("click",(i=>this[t.toLowerCase()](i))),i}T(t){const i={Escape:"hide",ArrowLeft:"prev",ArrowRight:"next"};i.hasOwnProperty(t.key)&&"function"==typeof this[i[t.key]]&&(t.preventDefault(),this[i[t.key]]())}k(t,i){const s=document.createElement("span");s.classList.add(...t.split(" ")),i.append(s)}},t.Scroller=class{constructor(t,o={}){this.C=t,this.t=i(s,o),this.Z(),this.A=null,this.N>this.D&&this.create()}create(){if(this.C.parentNode==this.L&&"hidden"==this.L.style.overflow)return;const t='<button class="'+this.t.leftButtonClass+' disabled">'+this.t.leftButtonContent+'</button><button class="'+this.t.rightButtonClass+'">'+this.t.rightButtonContent+"</button>";this.B(),this.L.style.overflow="hidden",this.L.insertAdjacentHTML("beforeend",t),this.L.addEventListener("click",(t=>this.P(t))),window.addEventListener("resize",(t=>this.H())),this.M=this.L.querySelector(".scroller-left"),this.O=this.L.querySelector(".scroller-right"),this.C.style.left="0px",this.M.disabled=!0,this.M.classList.add("disabled")}H(){clearTimeout(this.A),this.A=setTimeout(this.Z(),1e3)}destroy(){this.C.style.left="0px",this.M.remove(),this.O.remove(),window.removeEventListener("resize",this.H),this.R()}scrollLeft(){const t=parseInt(this.C.style.left);let i=t+this.j;this.O.classList.contains("disabled")&&(i=t+this.F%this.j),i>=0&&(i=0,this.M.disabled=!0,this.M.classList.add("disabled")),this.C.style.left=i+"px",this.O.disabled=!1,this.O.classList.remove("disabled"),console.log(`Moving from ${t} to ${i}`)}scrollRight(){const t=parseInt(this.C.style.left);let i=t-this.j;i<-this.F&&(i=-this.F,this.O.disabled=!0,this.O.classList.add("disabled")),this.C.style.left=i+"px",this.M.disabled=!1,this.M.classList.remove("disabled"),console.log(`Moving from ${t} to ${i}`)}B(){const t=document.createElement("div");t.classList.add("scroller-wrapper"),this.C.parentNode.insertBefore(t,this.C),t.append(this.C),this.L=t,this.Z()}R(){this.L.parentNode.insertBefore(this.C,this.L.previousSibling),this.L.remove()}Z(){const t=window.innerWidth,i=this.G(t,this.t.breakpoints);this.S(i);let s=window.getComputedStyle(this.C);const o=parseInt(s.getPropertyValue("padding-left"))+parseInt(s.getPropertyValue("padding-right"));this.N=this.C.scrollWidth-o,this.D=this.C.offsetWidth-o,this.V=this.C.querySelector("li").offsetWidth,this.q=Math.floor(this.D/this.V),this.j=this.V*this.q,this.F=this.N-this.D,console.log(`Content: ${this.N}; Display: ${this.D}.`)}G(t,i){for(let s=0;s<i.length;s++)if(i[s][0]<=t&&(s==i.length-1||i[s+1][0]>t))return i[s][1]}S(t){if(isNaN(t))throw new Error(`Invalid number provided for row count: ${t}`);console.log(`Setting row count to ${t}`);const i=this.C.querySelectorAll(".scroller li"),s=100/t+"%";for(const t of i)t.style.flexBasis=s}P(t){t.target.classList.contains("scroller-left")&&this.scrollLeft(),t.target.classList.contains("scroller-right")&&this.scrollRight()}},Object.defineProperty(t,"J",{value:!0})}));
