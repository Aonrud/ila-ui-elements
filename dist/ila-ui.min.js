/*! ILA UI Elements
 *Copyright (C) 2021-2022 Aonghus Storey
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
!function(t,s){"object"==typeof exports&&"undefined"!=typeof module?s(exports):"function"==typeof define&&define.amd?define(["exports"],s):s((t="undefined"!=typeof globalThis?globalThis:t||self).ila={})}(this,(function(t){"use strict";function s(t,i){let o={};for(const e in t)i[e]&&typeof i[e]!=typeof t[e]?console.warn(`Config option ${e} has the wrong type of value. Skipping`):"object"==typeof t[e]&&i[e]?o[e]=s(t[e],i[e]):o[e]=i[e]??t[e];return o}const i={leftButtonClass:"scroller-left btn btn-scroller",rightButtonClass:"scroller-right btn btn-scroller",leftButtonContent:"⮈",rightButtonContent:"⮊",breakpoints:[[0,4],[768,4],[992,6],[1200,8]]};const o={targetClass:"viewer",panzoom:!1,showDownload:!1,showLink:!0,texts:{cue:"⨁",hide:"ⓧ",download:"⮋",prev:"⮈",next:"⮊",link:"⛓",zoom:"🞕",zoomActive:"🞔"},icons:{cue:"",hide:"",download:"",prev:"",next:"",link:"",zoom:"",zoomActive:""},titles:{cue:"",hide:"Close",download:"Download this image",prev:"Previous image",next:"Next image",link:"More information",zoom:"Enlarge image (drag to move the image around)",zoomActive:"Reset image to fit screen",zoomDisabled:"Zoom disabled (the image is already full size)"}};t.ImageViewer=class{constructor(t={}){this.t=s(o,t),this.i=document.querySelectorAll("img."+this.t.targetClass)}create(){this.o(),this.h()}next(){const t=this.l===this.i.length-1?0:this.l+1;this.show(t)}prev(){const t=0===this.l?this.i.length-1:this.l-1;this.show(t)}hide(){this.u&&(this.m.style.display="none",document.body.style.overflow="visible",this.m.blur(),this.u=!1)}show(t=0){this.u||(this.m.style.display="block",document.body.style.overflow="hidden",this.m.focus(),this.u=!0),Number.isInteger(t)&&this.p(t)}p(t){const s=this.i[t];this.l=t,this.t.panzoom&&this.g.classList.contains("pan")&&(this.btnToggle(document.getElementById("btnZoom"),!1),this.zoomToggle(!1)),this.g.src=s.dataset.full??s.src,this.g.setAttribute("alt",s.getAttribute("alt"));const i=this.m.querySelector(".caption"),o=this.i[t].parentElement.nextElementSibling;o&&("FIGCAPTION"===o.tagName||o.classList.contains("caption"))?(i.textContent=o.textContent,i.style.display="block"):i.style.display="none"}zoom(t){const s=!this.g.classList.contains("pan");this.zoomToggle(s),this.btnToggle(t.currentTarget,s),t.currentTarget.classList.toggle("zoomed")}btnToggle(t,s=!0){const i=t.id.replace("btn","").toLowerCase(),o=[...t.childNodes].filter((t=>t.nodeType===Node.TEXT_NODE))[0],e=s?this.t.texts[`${i}Active`]:this.t.texts[i],n=s?this.t.icons[`${i}Active`]:this.t[i],h=s?this.t.titles[`${i}Active`]:this.t.titles[i];e&&(o||(o=document.createTextNode(),t.append(o)),o.textContent=e),n&&(t.querySelector("span").className=n),t.setAttribute("title",h)}zoomToggle(t=!0){const s=this.v;if(t)return this.g.classList.add("pan"),s.bind(),void s.setStyle("cursor","move");this.g.classList.remove("pan"),s.reset({animate:!1}),s.setStyle("cursor","auto"),s.destroy()}h(){const t=document.createElement("div");t.classList.add("image-wrap");const s=document.createElement("img");s.addEventListener("load",(()=>this.k())),t.append(s);const i=document.createElement("div");i.classList.add("caption");const o=document.createElement("div");o.id="overlay",o.style.display="none",o.setAttribute("tabindex",-1),o.append(t),o.append(i),o.append(this._()),o.addEventListener("keydown",(t=>this.$(t))),this.m=o,this.g=s,this.u=!1,document.body.append(this.m),this.t.panzoom&&(this.v=this.v??Panzoom(this.g,{disableZoom:!0,noBind:!0}),this.zoomToggle(!1))}o(){for(const[t,s]of this.i.entries()){let i=s.parentElement;"A"!==i.tagName&&(i=document.createElement("a"),s.parentElement.insertBefore(i,s),i.append(s)),i.classList.add("viewer-wrap");const o=document.createElement("div");o.classList.add("cue"),o.textContent=this.t.texts.cue,this.t.icons.cue&&this.C(this.t.icons.cue,o),i.append(o),i.addEventListener("click",(s=>{s.preventDefault(),this.show(t)}))}}_(){const t=document.createElement("nav");t.classList.add("image-viewer-controls"),t.setAttribute("aria-label","Image Viewer Controls");const s=["Hide","Prev","Next"],i=["Download","Link"];for(const i of s)t.append(this.I(i));this.t.panzoom&&t.append(this.I("Zoom"));for(const s of i)if(this.t[`show${s}`]){let i=document.createElement("a");i.id=`btn${s}`,t.append(i)}for(const s of t.children){const t=s.id.replace("btn","").toLowerCase();console.log(this.t.titles[t]),s.textContent=this.t.texts[t],this.t.icons[t]&&this.C(this.t.icons[t],s),this.t.titles[t]&&s.setAttribute("title",this.t.titles[t])}return t}k(){const t=this.g,s=this.l;if(this.t.showDownload){const s=document.getElementById("btnDownload");s.href=t.src,s.setAttribute("download","")}if(this.t.showLink){const t=document.getElementById("btnLink"),i=this.i[s].dataset.link?this.i[s].dataset.link:this.i[s].parentElement.href;console.log(i),i?(t.href=i,t.style.display="block"):(t.removeAttribute("href"),t.style.display="none")}if(this.t.panzoom){const s=document.getElementById("btnZoom");t.width<t.naturalWidth?(s.disabled=!1,s.setAttribute("title",this.t.titles.zoom)):(s.disabled=!0,s.setAttribute("title",this.t.titles.zoomDisabled))}}I(t){let s=document.createElement("button");return s.id=`btn${t}`,s.setAttribute("type","button"),"function"==typeof this[t.toLowerCase()]&&s.addEventListener("click",(s=>this[t.toLowerCase()](s))),s}$(t){const s={Escape:"hide",ArrowLeft:"prev",ArrowRight:"next"};s.hasOwnProperty(t.key)&&"function"==typeof this[s[t.key]]&&(t.preventDefault(),this[s[t.key]]())}C(t,s){const i=document.createElement("span");i.classList.add(...t.split(" ")),s.append(i)}},t.Scroller=class{constructor(t,o={}){this.A=t,this.t=s(i,o),this.B(),this.N=null,this.T>this.D&&this.create()}create(){if(this.A.parentNode==this.L&&"hidden"==this.L.style.overflow)return;const t='<button class="'+this.t.leftButtonClass+' disabled">'+this.t.leftButtonContent+'</button><button class="'+this.t.rightButtonClass+'">'+this.t.rightButtonContent+"</button>";this.M(),this.L.style.overflow="hidden",this.L.insertAdjacentHTML("beforeend",t),this.L.addEventListener("click",(t=>this.Z(t))),window.addEventListener("resize",(t=>this.P())),this.j=this.L.querySelector(".scroller-left"),this.O=this.L.querySelector(".scroller-right"),this.A.style.left="0px",this.j.disabled=!0,this.j.classList.add("disabled")}P(){clearTimeout(this.N),this.N=setTimeout(this.B(),1e3)}destroy(){this.A.style.left="0px",this.j.remove(),this.O.remove(),window.removeEventListener("resize",this.P),this.R()}scrollLeft(){const t=parseInt(this.A.style.left);let s=t+this.F;this.O.classList.contains("disabled")&&(s=t+this.H%this.F),s>=0&&(s=0,this.j.disabled=!0,this.j.classList.add("disabled")),this.A.style.left=s+"px",this.O.disabled=!1,this.O.classList.remove("disabled"),console.log(`Moving from ${t} to ${s}`)}scrollRight(){const t=parseInt(this.A.style.left);let s=t-this.F;s<-this.H&&(s=-this.H,this.O.disabled=!0,this.O.classList.add("disabled")),this.A.style.left=s+"px",this.j.disabled=!1,this.j.classList.remove("disabled"),console.log(`Moving from ${t} to ${s}`)}M(){const t=document.createElement("div");t.classList.add("scroller-wrapper"),this.A.parentNode.insertBefore(t,this.A),t.append(this.A),this.L=t,this.B()}R(){this.L.parentNode.insertBefore(this.A,this.L.previousSibling),this.L.remove()}B(){const t=window.innerWidth,s=this.S(t,this.t.breakpoints);this.G(s);let i=window.getComputedStyle(this.A);const o=parseInt(i.getPropertyValue("padding-left"))+parseInt(i.getPropertyValue("padding-right"));this.T=this.A.scrollWidth-o,this.D=this.A.offsetWidth-o,this.V=this.A.querySelector("li").offsetWidth,this.q=Math.floor(this.D/this.V),this.F=this.V*this.q,this.H=this.T-this.D,console.log(`Content: ${this.T}; Display: ${this.D}.`)}S(t,s){for(let i=0;i<s.length;i++)if(s[i][0]<=t&&(i==s.length-1||s[i+1][0]>t))return s[i][1]}G(t){if(isNaN(t))throw new Error(`Invalid number provided for row count: ${t}`);console.log(`Setting row count to ${t}`);const s=this.A.querySelectorAll(".scroller li"),i=100/t+"%";for(const t of s)t.style.flexBasis=i}Z(t){t.target.classList.contains("scroller-left")&&this.scrollLeft(),t.target.classList.contains("scroller-right")&&this.scrollRight()}},Object.defineProperty(t,"J",{value:!0})}));
