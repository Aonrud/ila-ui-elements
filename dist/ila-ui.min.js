/*! ILA UI Elements
 *Copyright (C) 2021-2022 Aonghus Storey
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
!function(t,s){"object"==typeof exports&&"undefined"!=typeof module?s(exports):"function"==typeof define&&define.amd?define(["exports"],s):s((t="undefined"!=typeof globalThis?globalThis:t||self).ila={})}(this,(function(t){"use strict";function s(t,s){let i={};for(const o in t)i[o]=s[o]??t[o];return i}const i={leftButtonClass:"scroller-left btn btn-scroller",rightButtonClass:"scroller-right btn btn-scroller",leftButtonContent:"⮈",rightButtonContent:"⮊",breakpoints:[[0,4],[768,4],[992,6],[1200,8]]};const o={targetClass:"viewer",panzoom:!1,showDownload:!1,showLink:!0,btnCueText:"⨁",btnHideText:"ⓧ",btnDownloadText:"⮋",btnPrevText:"⮈",btnNextText:"⮊",btnLinkText:"⛓",btnCueIcon:"",btnHideIcon:"",btnDownloadIcon:"",btnPrevIcon:"",btnNextIcon:"",btnLinkIcon:""};t.ImageViewer=class{constructor(t={}){this.t=s(o,t),this.i=document.querySelectorAll("img."+this.t.targetClass)}create(){this.o(),this.h()}o(){this.l=[];for(const[t,s]of this.i.entries()){let i=s.parentElement;"A"!==i.tagName&&(i=document.createElement("a"),s.parentElement.insertBefore(i,s),i.append(s)),i.classList.add("viewer-wrap");const o=document.createElement("div");o.classList.add("cue"),o.textContent=this.t.btnCueText,this.t.btnCueIcon&&this.u(this.t.btnCueIcon,o),i.append(o),i.addEventListener("click",(s=>{s.preventDefault(),this.show(t)}));const e=document.createElement("img");e.id=`img-${t}`,e.setAttribute("src",s.dataset.full),e.setAttribute("alt",s.getAttribute("alt")),e.dataset.link=s.parentElement.href??"",this.l.push(e)}}next(){const t=this.l.findIndex((t=>t.classList.contains("active"))),s=t===this.l.length-1?0:t+1;this.show(s)}prev(){const t=this.l.findIndex((t=>t.classList.contains("active"))),s=0===t?this.l.length-1:t-1;this.show(s)}hide(){this.p&&(this.m.style.display="none",document.body.style.overflow="visible",this.m.blur(),this.p=!1)}show(t){document.getElementById("overlay")||document.body.append(this.m),this.p||(this.m.style.display="block",document.body.style.overflow="hidden",this.m.focus(),this.p=!0),Number.isInteger(t)&&this.v(t)}v(t){for(const t of this.l)t.classList.remove("active");const s=this.l[t];s.classList.add("active");const i=this.m.querySelector(".caption"),o=this.i[t].parentElement.nextElementSibling;o&&("FIGCAPTION"===o.tagName||o.classList.contains("caption"))?(i.textContent=o.textContent,i.style.display="block"):i.style.display="none",this.g(s)}g(t){if(this.t.showDownload){const s=document.getElementById("btnDownload");s.href=t.src,s.setAttribute("download","")}if(this.t.showLink){const s=document.getElementById("btnLink");console.log(s),t.dataset.link?(s.href=t.dataset.link,s.style.display="block"):(s.removeAttribute("href"),s.style.display="none")}}h(){const t=document.createElement("div");t.classList.add("image-viewer-list"),t.append(...this.l);const s=document.createElement("div");s.classList.add("caption");const i=document.createElement("div");i.id="overlay",i.setAttribute("tabindex",-1),i.append(t),i.append(s),i.append(this.I()),i.addEventListener("keydown",(t=>this._(t))),this.m=i,this.k=t}I(){const t=document.createElement("nav");t.classList.add("image-viewer-controls"),t.setAttribute("aria-label","Image Viewer Controls");const s=["Hide","Prev","Next"],i=["Download","Link"];for(const i of s){let s=document.createElement("button");s.id=`btn${i}`,s.setAttribute("type","button"),"function"==typeof this[i.toLowerCase()]&&s.addEventListener("click",(()=>this[i.toLowerCase()]())),t.append(s)}for(const s of i)if(this.t[`show${s}`]){let i=document.createElement("a");i.id=`btn${s}`,t.append(i)}for(const s of t.children)s.textContent=this.t[`${s.id}Text`],this.t[`${s.id}Icon`]&&this.u(this.t[`${s.id}Icon`],s);return t}_(t){const s={Escape:"hide",ArrowLeft:"prev",ArrowRight:"next"};s.hasOwnProperty(t.key)&&"function"==typeof this[s[t.key]]&&(t.preventDefault(),this[s[t.key]]())}u(t,s){const i=document.createElement("span");i.classList.add(...t.split(" ")),s.append(i)}},t.Scroller=class{constructor(t,o={}){this.$=t,this.t=s(i,o),this.C(),this.T=null,this.L>this.N&&this.create()}create(){if(this.$.parentNode==this.B&&"hidden"==this.B.style.overflow)return;const t='<button class="'+this.t.leftButtonClass+' disabled">'+this.t.leftButtonContent+'</button><button class="'+this.t.rightButtonClass+'">'+this.t.rightButtonContent+"</button>";this.D(),this.B.style.overflow="hidden",this.B.insertAdjacentHTML("beforeend",t),this.B.addEventListener("click",(t=>this.A(t))),window.addEventListener("resize",(t=>this.H())),this.M=this.B.querySelector(".scroller-left"),this.P=this.B.querySelector(".scroller-right"),this.$.style.left="0px",this.M.disabled=!0,this.M.classList.add("disabled")}H(){clearTimeout(this.T),this.T=setTimeout(this.C(),1e3)}destroy(){this.$.style.left="0px",this.M.remove(),this.P.remove(),window.removeEventListener("resize",this.H),this.O()}scrollLeft(){const t=parseInt(this.$.style.left);let s=t+this.j;this.P.classList.contains("disabled")&&(s=t+this.F%this.j),s>=0&&(s=0,this.M.disabled=!0,this.M.classList.add("disabled")),this.$.style.left=s+"px",this.P.disabled=!1,this.P.classList.remove("disabled"),console.log(`Moving from ${t} to ${s}`)}scrollRight(){const t=parseInt(this.$.style.left);let s=t-this.j;s<-this.F&&(s=-this.F,this.P.disabled=!0,this.P.classList.add("disabled")),this.$.style.left=s+"px",this.M.disabled=!1,this.M.classList.remove("disabled"),console.log(`Moving from ${t} to ${s}`)}D(){const t=document.createElement("div");t.classList.add("scroller-wrapper"),this.$.parentNode.insertBefore(t,this.$),t.append(this.$),this.B=t,this.C()}O(){this.B.parentNode.insertBefore(this.$,this.B.previousSibling),this.B.remove()}C(){const t=window.innerWidth,s=this.R(t,this.t.breakpoints);this.G(s);let i=window.getComputedStyle(this.$);const o=parseInt(i.getPropertyValue("padding-left"))+parseInt(i.getPropertyValue("padding-right"));this.L=this.$.scrollWidth-o,this.N=this.$.offsetWidth-o,this.S=this.$.querySelector("li").offsetWidth,this.V=Math.floor(this.N/this.S),this.j=this.S*this.V,this.F=this.L-this.N,console.log(`Content: ${this.L}; Display: ${this.N}.`)}R(t,s){for(let i=0;i<s.length;i++)if(s[i][0]<=t&&(i==s.length-1||s[i+1][0]>t))return s[i][1]}G(t){if(isNaN(t))throw new Error(`Invalid number provided for row count: ${t}`);console.log(`Setting row count to ${t}`);const s=this.$.querySelectorAll(".scroller li"),i=100/t+"%";for(const t of s)t.style.flexBasis=i}A(t){t.target.classList.contains("scroller-left")&&this.scrollLeft(),t.target.classList.contains("scroller-right")&&this.scrollRight()}},Object.defineProperty(t,"q",{value:!0})}));
